<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kat.product.dao.ProductDao">
	<!-- 카테고리 가져오기 Start -->
	<select id="selectProductType" resultType="com.kat.product.model.ProductTypeModel">
		SELECT PRODUCT_TYPE, PRODUCT_TYPE_NAME, DELETE_FLAG FROM PRODUCT_TYPE WHERE DELETE_FLAG = 0;
	</select>
	<select id="selectContinent" resultType="com.kat.product.model.ContinentModel">
		SELECT CONTINENT_NO, CONTINENT, DELETE_FLAG FROM MENU_CONTINENT WHERE DELETE_FLAG = 0;
	</select>
	<select id="selectCountry" resultType="com.kat.product.model.CountryModel">
		SELECT COUNTRY_NO, COUNTRY, CONTINENT_NO, DELETE_FLAG FROM MENU_COUNTRY WHERE DELETE_FLAG = 0;
	</select>
	<select id="selectCiy" resultType="com.kat.product.model.CityModel">
		SELECT CITY_NO, CITY, COUNTRY_NO, DELETE_FLAG FROM MENU_CITY WHERE DELETE_FLAG = 0;
	</select>
	<!-- 카테고리 가져오기 END -->
	
	
	
	<!-- 상품 데이터 등록 START-->
	<select id="findBusinessNumber" resultType="String">
		SELECT BUSINESS_NUMBER FROM MEMBER WHERE USER_ID=#{user_id}
	</select>
	<select id="findProductNo" resultType="int">
		SELECT AUTO_INCREMENT from INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='PRODUCT'
	</select>
	<insert id="insertProduct" parameterType="com.kat.product.model.ProductModel">
		INSERT INTO PRODUCT
		VALUES (#{product_no}, #{product_title}, #{PRODUCT_TYPE}, now(), #{continent}, #{country}, #{city},
				(SELECT MEMBER_NO FROM MEMBER WHERE USER_ID=#{user_id}), #{user_profile}, #{business_number}, 
				#{product_main_photo}, 0, 0)
	</insert>
	<select id="findProductContentNo" resultType="int">
		SELECT AUTO_INCREMENT from INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='PRODUCT_CONTENT'
	</select>
  	<insert id="insertProductContent" parameterType="com.kat.product.model.PhotoContentModel">
		INSERT INTO PRODUCT_CONTENT
		VALUES (0, (SELECT PRODUCT_NO FROM PRODUCT WHERE MEMBER_NO = (SELECT MEMBER_NO FROM MEMBER WHERE USER_ID=#{user_id})
				ORDER BY PRODUCT_NO DESC LIMIT 1), #{product_content}, #{product_info}, 0)
	</insert>
	<insert id="insertProductPhoto" parameterType="com.kat.product.model.PhotoContentModel">
		INSERT INTO PRODUCT_PHOTO
		VALUES (0, #{product_photo1}, #{product_photo2} ,#{product_photo3}, #{product_photo4}, #{product_photo5}, #{product_photo6}, 
			#{product_photo7}, #{product_photo8}, #{product_photo9}, #{product_photo10}, #{product_content_no}, 0)
	</insert>
	
	<insert id="insertProductCourse" parameterType="com.kat.product.model.ProductCourseModel">
		INSERT INTO PRODUCT_COURSE
		VALUES ((SELECT PRODUCT_NO FROM PRODUCT WHERE MEMBER_NO = (SELECT MEMBER_NO FROM MEMBER WHERE USER_ID=#{user_id}) 
				ORDER BY PRODUCT_NO DESC LIMIT 1), 0, #{course} ,#{course_photo_dir}, 0)
	</insert>
	
	<insert id="insertProductSub" parameterType="com.kat.product.model.ProductSubModel">
		INSERT INTO PRODUCT_SUB	
		VALUES (0, (SELECT PRODUCT_NO FROM PRODUCT WHERE MEMBER_NO = (SELECT MEMBER_NO FROM MEMBER WHERE USER_ID=#{user_id}) 
				ORDER BY PRODUCT_NO DESC LIMIT 1), #{product_name}, #{cost} ,#{max_people}, 0)
	</insert>
	<!-- 상품 데이터 등록 END-->

	
	<!-- 여행 상품 전체 가져오기 START -->
	
	<!-- 전체 가져오기(여행상품 메뉴 선택시) -->
	<select id="findAllTravelProduct" resultType="com.kat.product.model.ProductInfo">
		SELECT PMM.PRODUCT_NO, PRODUCT_TITLE, PRODUCT_TYPE, COUNTRY, CITY, MEMBER_NO, PRODUCT_MAIN_PHOTO, COST
		FROM 
			(SELECT PRODUCT_NO, PRODUCT_TITLE, PRODUCT_TYPE, MCOUN.COUNTRY, MCI.CITY, MEMBER_NO, PRODUCT_MAIN_PHOTO 
				FROM PRODUCT P, MENU_COUNTRY MCOUN, MENU_CITY MCI
				WHERE P.COUNTRY=MCOUN.COUNTRY_NO AND P.CITY=MCI.CITY_NO AND P.DELETE_FLAG=0 AND P.USE_FLAG=1) PMM
		LEFT JOIN PRODUCT_SUB PS  ON PMM.PRODUCT_NO=PS.PRODUCT_NO
		ORDER BY PMM.PRODUCT_NO 
		LIMIT 1, 48
	</select>
	<!-- user_id 별로 가져오기 -->
	<select id="findUserIdProduct" resultType="com.kat.product.model.AdminProductList">
		SELECT J1.*, J2.PRODUCT_CONTENT, J2.PRODUCT_INFO, J2.COURSE
		FROM 
			(SELECT PMM.PRODUCT_NO, PRODUCT_TYPE, PRODUCT_TYPE_NAME, COUNTRY_NO, COUNTRY, CITY_NO, CITY, PRODUCT_TITLE, MEMBER_NO, USER_ID, PRODUCT_NAME, COST, USER_PROFILE, PMM.DELETE_FLAG, CREATE_DATE, SALES_START_DATE, USE_FLAG, PRODUCT_MAIN_PHOTO
				FROM 
					(SELECT PRODUCT_NO, PRODUCT_TITLE, P.PRODUCT_TYPE, PRODUCT_TYPE_NAME, MCOUN.COUNTRY_NO, MCOUN.COUNTRY, MCI.CITY_NO, MCI.CITY, P.MEMBER_NO, M.USER_ID, USER_PROFILE, P.DELETE_FLAG, P.CREATE_DATE, SALES_START_DATE, USE_FLAG, PRODUCT_MAIN_PHOTO
						FROM PRODUCT P, MENU_COUNTRY MCOUN, MENU_CITY MCI, MEMBER M, PRODUCT_TYPE PT
						WHERE P.COUNTRY=MCOUN.COUNTRY_NO AND P.CITY=MCI.CITY_NO AND P.MEMBER_NO=M.MEMBER_NO  AND P.PRODUCT_TYPE=PT.PRODUCT_TYPE AND USER_ID=#{user_id}
					) PMM
				LEFT JOIN PRODUCT_SUB PS  
		        ON PMM.PRODUCT_NO=PS.PRODUCT_NO
			) J1 
		LEFT JOIN 
			(SELECT PCON.PRODUCT_NO, PRODUCT_CONTENT, PRODUCT_INFO, COURSE  
				FROM PRODUCT_CONTENT PCON 
				LEFT JOIN PRODUCT_COURSE PCOUR 
				ON PCON.PRODUCT_NO=PCOUR.PRODUCT_NO
			) J2
		ON J1.PRODUCT_NO=J2.PRODUCT_NO
	</select>
	<!-- product_type 별로 가져오기 -->
	<select id="findTypeTravelProduct" resultType="com.kat.product.model.ProductInfo">
		SELECT PMM.PRODUCT_NO, PRODUCT_TITLE, PRODUCT_TYPE, COUNTRY, CITY, MEMBER_NO, PRODUCT_MAIN_PHOTO, COST
		FROM 
			(SELECT PRODUCT_NO, PRODUCT_TITLE, PRODUCT_TYPE, MCOUN.COUNTRY, MCI.CITY, MEMBER_NO, PRODUCT_MAIN_PHOTO 
				FROM PRODUCT P, MENU_COUNTRY MCOUN, MENU_CITY MCI
				WHERE P.COUNTRY=MCOUN.COUNTRY_NO AND P.CITY=MCI.CITY_NO AND P.USE_FLAG=1 AND P.DELETE_FLAG=0 AND PRODUCT_TYPE=#{product_type}) PMM
		LEFT JOIN PRODUCT_SUB PS  ON PMM.PRODUCT_NO=PS.PRODUCT_NO
		<!-- LIMIT 1, 12 -->
	</select>
	<!-- search_word 검색 후 가져오기 (메인 제목, 대륙, 도시, 국가) -->
	<select id="findWordTravelProduct" resultType="com.kat.product.model.ProductInfo">
		SELECT PMMM.PRODUCT_NO, PRODUCT_TITLE, PRODUCT_TYPE, COUNTRY, CITY, MEMBER_NO, PRODUCT_MAIN_PHOTO, COST
			FROM 
				(SELECT PRODUCT_NO, PRODUCT_TITLE, PRODUCT_TYPE, MCONTI.CONTINENT, MCOUN.COUNTRY, MCI.CITY, MEMBER_NO, PRODUCT_MAIN_PHOTO 
					FROM PRODUCT P, MENU_COUNTRY MCOUN, MENU_CITY MCI, MENU_CONTINENT MCONTI
					WHERE P.COUNTRY=MCOUN.COUNTRY_NO AND P.CITY=MCI.CITY_NO AND P.CONTINENT=MCONTI.CONTINENT_NO AND P.USE_FLAG AND P.DELETE_FLAG=0 
					AND (PRODUCT_TITLE LIKE #{search_word} OR MCONTI.CONTINENT LIKE #{search_word} OR MCOUN.COUNTRY LIKE #{search_word} OR MCI.CITY LIKE #{search_word} )) PMMM
			LEFT JOIN PRODUCT_SUB PS ON PMMM.PRODUCT_NO=PS.PRODUCT_NO
			<!-- LIMIT 1, 12 -->
	</select>
	<!-- 여행 상품 상세 정보 가져오기 -->
	<select id="findProductDetailInfo" resultType="com.kat.product.model.ProductInfo">
		SELECT J2.*, P_PHOTO.PRODUCT_PHOTO1, P_PHOTO.PRODUCT_PHOTO2, P_PHOTO.PRODUCT_PHOTO3, 
				P_PHOTO.PRODUCT_PHOTO4, P_PHOTO.PRODUCT_PHOTO5, P_PHOTO.PRODUCT_PHOTO6, P_PHOTO.PRODUCT_PHOTO7, 
				P_PHOTO.PRODUCT_PHOTO8, P_PHOTO.PRODUCT_PHOTO9, P_PHOTO.PRODUCT_PHOTO10
		FROM
			(SELECT J1.*, P_COUR.COURSE, P_COUR.COURSE_PHOTO_DIR
			FROM
				(SELECT P.*, PC.PRODUCT_CONTENT, PC.PRODUCT_INFO
				FROM
					(SELECT P.PRODUCT_NO, PRODUCT_NAME, COST, MAX_PEOPLE, PRODUCT_TITLE, 
						(SELECT PRODUCT_TYPE_NAME FROM PRODUCT_TYPE WHERE PRODUCT_TYPE=P.PRODUCT_TYPE) PRODUCT_TYPE_NAME, CREATE_DATE,
						(SELECT CONTINENT FROM MENU_CONTINENT WHERE CONTINENT_NO=P.CONTINENT) CONTINENT, 
						(SELECT COUNTRY FROM MENU_COUNTRY WHERE COUNTRY_NO=P.COUNTRY) COUNTRY,
						(SELECT CITY FROM MENU_CITY WHERE CITY_NO=P.CITY) CITY, USER_PROFILE, BUSINESS_NUMBER, PRODUCT_MAIN_PHOTO, 
						USE_FLAG, P.DELETE_FLAG, SALES_START_DATE
					FROM PRODUCT P, PRODUCT_SUB PS WHERE P.PRODUCT_NO=PS.PRODUCT_NO AND P.PRODUCT_NO=#{product_no}) P, PRODUCT_CONTENT PC
				WHERE P.PRODUCT_NO=PC.PRODUCT_NO) J1 INNER JOIN PRODUCT_COURSE P_COUR
			ON J1.PRODUCT_NO=P_COUR.PRODUCT_NO) J2 INNER JOIN PRODUCT_PHOTO P_PHOTO
		ON J2.PRODUCT_NO=P_PHOTO.PRODUCT_NO;
	</select>
	<!-- 상품 정보 가져오기 < 유저 프로필, 상품 설명, 유의사항, 코스 > END -->
	<select id="findUserProfile" resultType="com.kat.product.model.ProductModel">
		SELECT PRODUCT_NO, PRODUCT_TITLE, USER_PROFILE, PRODUCT_MAIN_PHOTO FROM PRODUCT WHERE PRODUCT_NO=#{product_no}
	</select>
	<select id="findProductContent" resultType="com.kat.product.model.ProductInfo">
	    SELECT P.PRODUCT_NO, PRODUCT_TITLE, PRODUCT_MAIN_PHOTO, PRODUCT_CONTENT FROM PRODUCT P, PRODUCT_CONTENT PC WHERE P.PRODUCT_NO=PC.PRODUCT_NO AND P.PRODUCT_NO=#{product_no}
	</select>
	<select id="findProductInfo" resultType="com.kat.product.model.ProductInfo">
		SELECT P.PRODUCT_NO, PRODUCT_TITLE, PRODUCT_MAIN_PHOTO, PRODUCT_INFO FROM PRODUCT P, PRODUCT_CONTENT PC WHERE P.PRODUCT_NO=PC.PRODUCT_NO AND P.PRODUCT_NO=#{product_no}
	</select>
	<select id="findProductCourse" resultType="com.kat.product.model.ProductInfo">
		SELECT P.PRODUCT_NO, PRODUCT_TITLE, PRODUCT_MAIN_PHOTO, COURSE FROM PRODUCT P, PRODUCT_COURSE PC WHERE P.PRODUCT_NO=PC.PRODUCT_NO AND P.PRODUCT_NO=#{product_no}
	</select>
	<!-- 여행 상품 전체 가져오기 END -->
	
	<!-- 원하는 상품 즐겨찾기 하기 START -->
	<insert id="addfavoriteProduct" parameterType="com.kat.product.model.FavoriteProduct">
		INSERT INTO FAVORITE_PRODUCT
		VALUES (0, #{product_no}, (SELECT MEMBER_NO FROM MEMBER WHERE USER_ID=#{user_id}), now(), 0)
	</insert>
	<select id="delfavoriteProduct" parameterType="com.kat.product.model.FavoriteProduct">
		UPDATE FAVORITE_PRODUCT SET DELETE_FLAG = 1 where product_no = #{product_no} 
		AND member_no = (SELECT MEMBER_NO FROM MEMBER WHERE USER_ID=#{user_id})
	</select>
	<select id="chkFavoriteProduct" resultType="String">
		SELECT PRODUCT_NO FROM FAVORITE_PRODUCT
		WHERE DELETE_FLAG=0 
		AND MEMBER_NO=(SELECT MEMBER_NO FROM MEMBER WHERE USER_ID=#{user_id})
	</select>
	<!-- 원하는 상품 즐겨찾기 하기 END -->
	
	
	
	
	
	
	<!-- 등록된 PRODUCT 갯수 -->
	<select id="menuSelectCount" resultType="int">
		SELECT COUNT(*) 
		FROM PRODUCT 
		WHERE USER_ID = #{param1} AND DELETE_FLAG=0
	</select>

	<!--PRODUCT 리스트 담기 -->
	<!-- <select id="menuList" resultType="com.kat.seat.model.MenuInfo">
		SELECT PRODUCT_NO, PRODUCT_NAME, PH.PRODUCT_TYPE, COST, BUSINESS_NUMBER, USER_ID, CONTINENT, COUNTRY, CITY, PH.CREATE_DATE, 0, BOARD_NO
		FROM PRODUCT PR LEFT JOIN PHOTO PH
		ON PR.PRODUCT_TYPE = PH.PRODUCT_TYPE WHERE PR.PRODUCT_NO = "1"
	</select> -->
	<select id="menuList" resultType="com.kat.seat.model.MenuInfo">
		SELECT PR.PRODUCT_NO, PRODUCT_NAME, PR.PRODUCT_TYPE, COST, BUSINESS_NUMBER, USER_ID, CONTINENT, COUNTRY, CITY, 
				PR.CREATE_DATE, BOARD_NO, FILE_DIR AS file_menu_photo
		FROM PRODUCT PR LEFT JOIN PHOTO PH
		ON PR.USER_ID=PH.APPLY_USER_ID AND PR.PRODUCT_NO=PH.BOARD_NO
		WHERE USER_ID=#{param1} AND DELETE_FLAG=0
	    ORDER BY PR.CREATE_DATE DESC LIMIT #{param2}, #{param3}
	</select>
			
	<!-- 메뉴 수정할 데이터 가져오기 -->
	<select id="getMenuinfo" resultType="com.kat.seat.model.MenuInfo">
		SELECT product_no, product_name, cost, product_type, business_number, user_id, file_menu_photo, create_date, continent, country, city
		FROM PRODUCT 
		where product_no = #{product_no}
	</select>
	
	<!-- 수정하기 -->
	<insert id="menuUpdate" parameterType="com.kat.seat.model.MenuInfo">
		UPDATE PRODUCT
		SET product_name = #{product_name}, cost = #{cost}, category = #{category} , file_menu_photo = #{file_menu_photo}
		where product_no = #{product_no}
	</insert>
	
	<!-- 삭제하기 -->
	<select id="menudelete">
		DELETE FROM PRODUCT WHERE product_no = #{product_no}
	</select>
	
	<!-- 매장 사진 등록 -->
	<insert id="insertshop" parameterType="com.kat.seat.model.ShopPhoto">
		insert into shop_photo (user_id, file_shopphoto, create_date)
		values (#{user_id}, #{file_shopphoto}, now())
	</insert>
	
	<!-- 등록된 매장 사진수 -->
	<select id="shopCount" resultType="int">
		SELECT COUNT(*) FROM SHOP_PHOTO WHERE USER_ID = #{user_id}
	</select>

	<!--사진 리스트 담기 -->
	<select id="shopPhotoList" resultType="com.kat.seat.model.ShopPhoto">
		SELECT PHOTO_NO, USER_ID, FILE_SHOPPHOTO, CREATE_DATE
		FROM SHOP_PHOTO
		WHERE USER_ID = #{param1}
		LIMIT #{param2}, #{param3}
	</select>
	
	<!--매장사진 삭제하기 -->
	<select id="shopPhotodelete">
		delete FROM SHOP_PHOTO where photo_no = #{product_no}
	</select>
	
	<!--사진 리스트 담기 -->
	<select id="shopSearchList" resultType="com.kat.seat.model.ShopPhoto">
		SELECT PHOTO_NO, USER_ID, FILE_SHOPPHOTO, CREATE_DATE
		FROM SHOP_PHOTO where user_id = #{param1} limit #{param2}, #{param3}
	</select>
	
	<!-- 매장 정보 가져오기 -->
	<select id="getShopAddress" resultType="com.kat.seat.model.InfoShopAddress">
	select m.member_no , m.user_id, b.address1, b.business_name from member m , business b 
	where m.member_no = b.company_no and m.user_id = #{param1}
	</select>
	
	<!-- 사업자인지 확인하기 -->
	<select id="getCategory" resultType="String">
		select category from member where user_id= #{param1};
	</select>
	
	<!-- <select id="shopCount2" resultType="int">
		SELECT COUNT(*) 
		FROM PHOTO PH, PRODUCT PR 
		WHERE PH.PRODUCT_TYPE=PR.PRODUCT_TYPE AND PR.PRODUCT_TYPE = 1
	</select>
	
	<select id="getShopAddress2" resultType="com.kat.seat.model.InfoShopAddress">
		SELECT M.MEMBER_NO, USER_ID, ADDRESS1, COMPANY
		FROM MEMBER M LEFT JOIN BUSINESS B
		ON M.MEMBER_NO = B.MEMBER_NO AND M.USER_ID = #{user_id}
	</select>
	
	<select id="shopPhotoList2" resultType="com.kat.seat.model.ShopPhoto">
		SELECT * FROM SHOP_PHOTOwhere user_id = #{param1} limit #{param2}, #{param3}
		SELECT PHOTO_NO, USER_ID, FILE_SHOPPHOTO, CREATE_DATE
		FROM SHOP_PHOTO
	</select>
	
	<select id="menuSelectCount2" resultType="int">
		SELECT COUNT(*) FROM PRODUCT 
	</select>
	
	<select id="menuList2" resultType="com.kat.seat.model.MenuInfo">
		SELECT * FROM PRODUCT;
	</select> -->
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 장준영 수정 중 : 메인에서 상품 검색하기 -->
	<!-- continent, country 해당 상품 리스트 -->
	<select id="productSearch_1" resultType="com.kat.seat.model.InfoShopSearch">
		select member.company_no, business.business_name, business.address1, product.menu_category , product.menu_name, product.user_id, product.file_menuphoto, product.menu_loc
		from member inner joinbusiness on member.company_no = business.company_no inner join product on business.company_no = product.company_no
		where menu_name like CONCAT('%',#{param1},'%') limit #{param2}, #{param3}
	</select>
	
	<!-- 관리자 페이지에서 상품 기본 정보 추가 입력 및 수정 -->
	<insert id="reUseFlag" parameterType="int">
	    UPDATE PRODUCT SET USE_FLAG=0 WHERE PRODUCT_NO=#{product_no}
	</insert>
	<insert id="updateUserProfile" parameterType="com.kat.product.model.ProductModel">
	    UPDATE PRODUCT SET user_profile = #{user_profile} WHERE product_no = #{product_no}
	</insert>
	<insert id="updateProductContent" parameterType="com.kat.product.model.ProductInfo">
	    UPDATE PRODUCT_CONTENT SET PRODUCT_CONTENT=#{product_content} WHERE PRODUCT_NO = #{product_no}
	</insert>
	<insert id="updateProductInfo" parameterType="com.kat.product.model.ProductInfo">
	    UPDATE PRODUCT_CONTENT SET PRODUCT_INFO=#{product_info} WHERE PRODUCT_NO = #{product_no}
	</insert>
	<insert id="updateProductCourse" parameterType="com.kat.product.model.ProductInfo">
	    UPDATE PRODUCT_COURSE SET COURSE=#{course} WHERE PRODUCT_NO=#{product_no}
	</insert>

</mapper>

